import React, { useRef, useState } from 'react';
import { useParams } from 'react-router-dom';
import { toast } from 'react-toastify';

import { Modal } from 'react-bootstrap/Modal';

export default function ChangePassword() {

    var PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;

    let { email } = useParams();

    let [enableButton, setEnableButton] = useState(false);
    let [enable, setEnable] = useState(false);

    let newPasswordRef = useRef();

    function checkPassword() {
        if (PASSWORD_REGEX.test(newPasswordRef.current.value)) {
            setEnable(true);
        } else {
            setEnable(false);
            toast.error("Invalid Password Pattern");
        }
    }

    function comparePassword(event) {
        const confirmPassword = event.target.value;
        if (confirmPassword !== newPasswordRef.current.value) {
            setEnableButton(false);
        } else {
            setEnableButton(true);
        }
    }

    function changePasswordBox() {
        return (
            <div className="modal" tabIndex="-1">
                <div className="modal-dialog">
                    <div className="modal-content">
                        <div className="modal-header">
                            <h5 className="modal-title">Change Password</h5>
                            <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div className="modal-body">
                            <label htmlFor='New Password'>New Password</label>
                            <input type='password' ref={newPasswordRef} onBlur={checkPassword} autoFocus/>
                            <br />
                            <br />
                            <label htmlFor='Confirm Password'>Confirm Password</label>
                            <input type='password' className={enableButton ? 'form-control border border-success' : 'form-control border border-danger'} onChange={comparePassword} disabled={!enable}></input>
                        </div>
                        <div className="modal-footer">
                            <button type="button" className="btn btn-primary" disabled={!enableButton}>Set Password</button>
                        </div>
                    </div>
                </div>
            </div>
        );
    }

    return (
        
        <div>
            
            <div className="modal" tabIndex="-1">
                <div className="modal-dialog">
                    <div className="modal-content">
                        <div className="modal-header">
                            <h5 className="modal-title">Change Password</h5>
                            <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div className="modal-body">
                            <label htmlFor='New Password'>New Password</label>
                            <input type='password' ref={newPasswordRef} onBlur={checkPassword} autoFocus/>
                            <br />
                            <br />
                            <label htmlFor='Confirm Password'>Confirm Password</label>
                            <input type='password' className={enableButton ? 'form-control border border-success' : 'form-control border border-danger'} onChange={comparePassword} disabled={!enable}></input>
                        </div>
                        <div className="modal-footer">
                            <button type="button" className="btn btn-primary" disabled={!enableButton}>Set Password</button>
                        </div>
                    </div>
                </div>
            </div>
        
        </div>
    );
}

